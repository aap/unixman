.pa 1
.he '11/3/71''AS (I)'
.ti 0
NAME		as -- assembler
.sp
.ti 0
SYNOPSIS	as__ name918 ...
.sp
.ti 0
DESCRIPTION	as__
assembles the concatenation of name\d1\u, .... as__
is based on the DEC-provided assembler PAL-11R [references], although
it was coded locally.
Therefore, only the differences will be recorded.
.sp
Character changes are:
.sp
     for    use
      @      *
      #      $
      ;      /
.sp
In as__, the character ";" is a logical new line; several operations
may appear on one line if separated by ";".
Several new expression operators have been provided:
.sp
     \\>     right shift (logical)
     \\<     left shift
     *      multiplication
     \\/     division
.nf
     %      remainder (no longer means "register")
.fi
     !      one's complement
     []     parentheses for grouping
.nf
     ^      result has value of left, type of right
.sp
.fi
For example location 0 (relocatable) can be written "0^.";
another way to denote register 2 is "2^r0".

All of the preceding operators are binary; if
a left operand is missing, it is taken
to be 0.
The "!" operator adds its left operand to the one's
complement of its right operand.

There is a conditional assembly operation code different
from that of PAL-11R (whose conditionals are not provided):
.sp
     .if expression
     ...
     .endif
.sp
If the expression__________ evaluates to non-zero, the section of
code between the ".if" and the ".endif" is assembled; otherwise
it is ignored.  ".if"s may be nested.
.sp
Temporary labels like those introduced by Knuth [references] may
be employed.
A temporary label is defined as follows:
.sp
     n:
.sp
where n_ is a digit 0 ... 9.  Symbols of the form "n_f" refer to the
first label "n_:" following the use of the symbol; those
of the form "n_b" refer to the last "n_:".  The same "n_" may
be used many times.
Labels of this form are less taxing both on the
imagination of the programmer and on the symbol table space
of the assembler.
.sp
The PAL-11R opcodes ".word", ".eot" and ".end" are redundant and are omitted.
.sp
The symbols
.sp
     r0 ... r5
     sp
     pc
     ac
     mq
     div
     mul
     lsh
     ash
     nor
     csw
     ..
.sp
are predefined with appropriate values.
The symbol "csw" refers to the console switches.
".." is the relocation constant and is added to
each relocatable symbol.
normally it is 40000(8);
it may be changed to assemble a section of code at a
location different from that in which it will be executed.
.sp
It is illegal to assign a value to "." less than its current value.
.sp
The new opcode "sys" is used to specify system
calls.
Names for system calls are predefined.
See the section on system calls for their names.
.sp
Strings of characters may be assembled in a way more
convenient than PAL-11's ".ascii" operation (which is,
therefore, omitted).  Strings are included between the
string quotes "<" and ">":
.sp
     <here is a string>
.sp
Escape sequences exist to enter non graphic
and other difficult characters.  These sequences are
also effective in single and double character constants introduced
by single (') and double (") quotes respectively.
.sp
     use___  for___
     \\n   newline (012)
     \\0   NULL (000)
     \\>   >
     \\t   TAB (011)
     \\\\   \\
.sp
The binary output of the assembler is placed on the file "a.out" in the
current directory.
a.out_____ also contains the symbol table from the assembly
and relocation bits.
The output of the assembler is executable immediately
if the assembly was error-free and if there were no
unresolved external references.
The link editor ld__ may be used to combine several
assembly outputs and resolve global symbols.
.sp
The multiple location counter feature of PAL11R is not supported.
.sp
The assembler does not produce a listing of the source program.
This is not a serious drawback; the debugger db__ discussed
below is sufficiently powerful to render a printed
octal translation of the source unnecessary.
.sp
.ti 0
FILES		/etc/as2	pass 2 of the assembler
.br
a.tmp1		temporary
.br
a.tmp2		temporary
.br
a.tmp3		temporary
.br
a.out		object
.sp
.ti 0
SEE ALSO	ld,
nm,
sh,
un,
db,
a.out (format of output)
.sp
.ti 0
DIAGNOSTICS	When
an input file cannot be read, its name
followed by a question mark is typed and assembly
ceases.
.sp
When syntactic or semantic errors occur, a single-character diagnostic is typed out
together with the line number and the file name in which it
occurred.  Errors in pass 1 cause cancellation of pass 2.
The possible errors are:
.sp
.in +6
.ti -6
)     parentheses error
.ti -6
]     parentheses error
.ti -6
*     Indirection ("*_") used illegally
.ti -6
A     error in A_ddress
.ti -6
B     B_ranch instruction has too remote an address
.ti -6
E     error in E_xpression
.ti -6
F     error in local ("F_" or "b") type symbol
.ti -6
G     G_arbage (unknown) character
.ti -6
M     M_ultiply defined symbol as label
.ti -6
O     O_dd-- word quantity assembled at odd address
.ti -6
P     P_hase error-- "." different in pass 2 from pass 1 value
.ti -6
R     R_elocation error
.ti -6
U     U_ndefined symbol
.ti -6
X     syntaX_ error
.in -6
.sp
.ti 0
BUGS		Symbol table overflow is not checked.
.sp
.ti 0
OWNER		dmr
