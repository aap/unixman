.xx "as2(VII): assembler\'s pass" "2"
.xx "kbd(VII): map of TTY" "37 keyboard"
.xx "chmod(I): change" "access mode of files"
.xx "sdate(I):" "adjust date and time"
.xx "mail(I): send mail to" "another user"
.xx "write(I): write to" "another user"
.xx "" "a.out(V): assembler and loader output"
.xx "ar(I):" "archive (combine) files"
.xx "archive(V):" "archive file"
.xx "" "archive(V): archive file"
.xx "glob(VII):" "argument expander"
.xx "" "ar(I): archive (combine) files"
.xx "" "as2(VII): assembler\'s pass 2"
.xx "dpt(VI): read DEC" "ASCII paper tapes"
.xx "bcd(I): convert" "ASCII to BCD"
.xx "atof(III): convert" "ASCII to floating"
.xx "atoi(III): convert" "ASCII to integer"
.xx "ascii(VII): map of" "ASCII"
.xx "ctime(III): convert time to" "ASCII"
.xx "ftoa(III): convert floating to" "ASCII"
.xx "itoa(III): convert integer to" "ASCII"
.xx "" "ascii(VII): map of ASCII"
.xx "" "as(I): assembler"
.xx "a.out(V):" "assembler and loader output"
.xx "as(I):" "assembler"
.xx "ba(VII): B" "assembler"
.xx "as2(VII):" "assembler\'s pass 2"
.xx "liba(VII): standard" "assembly-language library"
.xx "" "atof(III): convert ASCII to floating"
.xx "" "atoi(III): convert ASCII to integer"
.xx "ba(VII):" "B assembler"
.xx "bc(VII):" "B compiler"
.xx "bilib(VII):" "B interpreter library"
.xx "libb(VII): standard" "B library"
.xx "b(I): compile" "B program"
.xx "brt1,brt2(VII):" "B start and finish"
.xx "log(III): logarithm" "base e"
.xx "" "bas(I): BASIC dialect"
.xx "bas(I):" "BASIC dialect"
.xx "basic(VI): DEC supplied" "BASIC"
.xx "" "basic(VI): DEC supplied BASIC"
.xx "" "ba(VII): B assembler"
.xx "bcd(I): convert ASCII to" "BCD"
.xx "" "bcd(I): convert ASCII to BCD"
.xx "" "bc(VII): B compiler"
.xx "su(I):" "become super-user"
.xx "" "b(I): compile B program"
.xx "" "bilib(VII): B interpreter library"
.xx "bppt(V):" "binary paper tape format"
.xx "dbppt(I): write" "binary paper tape"
.xx "lbppt(I): read" "binary paper tape"
.xx "dli(VI): load DEC" "binary paper tapes"
.xx "strip(I): remove symbols, relocation" "bits"
.xx "" "bj(VI): the game of blackjack"
.xx "bj(VI): the game of" "blackjack"
.xx "bproc(VII):" "boot procedure"
.xx "" "boot(I): reboot system"
.xx "" "bppt(V): binary paper tape format"
.xx "" "bproc(VII): boot procedure"
.xx "break(II): set program" "break"
.xx "" "break(II): set program break"
.xx "" "brt1,brt2(VII): B start and finish"
.xx "dc(I): desk" "calculator"
.xx "cal(VI): print" "calender"
.xx "" "cal(VI): print calender"
.xx "cemt(II):" "catch EMT traps"
.xx "ilgins(II):" "catch illegal instruction trap"
.xx "intr(II):" "catch or inhibit interrupts"
.xx "quit(II):" "catch or inhibit quits"
.xx "" "cat(I): concatenate (or print) files"
.xx "" "cemt(II): catch EMT traps"
.xx "chmod(I):" "change access mode of files"
.xx "chmod(II):" "change mode of file"
.xx "chown(II):" "change owner of file"
.xx "chown(I):" "change owner of files"
.xx "chdir(I):" "change working directory"
.xx "chdir(II):" "change working directory"
.xx "putc(III): write" "character or word"
.xx "get(III): get" "character"
.xx "" "chdir(I): change working directory"
.xx "" "chdir(II): change working directory"
.xx "check(I):" "check consistency of file system"
.xx "" "check(I): check consistency of file system"
.xx "chess(VI): the game of" "chess"
.xx "" "chess(VI): the game of chess"
.xx "" "chmod(I): change access mode of files"
.xx "" "chmod(II): change mode of file"
.xx "" "chown(I): change owner of files"
.xx "" "chown(II): change owner of file"
.xx "close(II):" "close open file"
.xx "" "close(II): close open file"
.xx "" "cmp(I): compare file contents"
.xx "ar(I): archive" "(combine) files"
.xx "sh(I):" "command interpreter"
.xx "cmp(I):" "compare file contents"
.xx "b(I):" "compile B program"
.xx "for(I):" "compile Fortran program"
.xx "f1,f2,f3,f4(VII): Fortran" "compiler passes"
.xx "bc(VII): B" "compiler"
.xx "cat(I):" "concatenate (or print) files"
.xx "check(I): check" "consistency of file system"
.xx "tty(IV):" "console typewriter"
.xx "ls(I): list" "contents of directory"
.xx "cmp(I): compare file" "contents"
.xx "bcd(I):" "convert ASCII to BCD"
.xx "atof(III):" "convert ASCII to floating"
.xx "atoi(III):" "convert ASCII to integer"
.xx "ftoa(III):" "convert floating to ASCII"
.xx "itoa(III):" "convert integer to ASCII"
.xx "ctime(III):" "convert time to ASCII"
.xx "cp(I):" "copy file"
.xx "core(V):" "core image file"
.xx "mem(IV):" "core memory as file"
.xx "" "core(V): core image file"
.xx "sin(III): sine," "cosine"
.xx "wc(I): get (English) word" "count"
.xx "" "cp(I): copy file"
.xx "mkdir(I):" "create directory"
.xx "mkdir(II):" "create directory"
.xx "creat(II):" "create file"
.xx "fork(II):" "create new process"
.xx "" "creat(II): create file"
.xx "" "ctime(III): convert time to ASCII"
.xx "" "das(VI): disassembler"
.xx "date(I): get" "date and time of day"
.xx "sdate(I): adjust" "date and time"
.xx "smdate(II): set" "date modified of file"
.xx "" "date(I): get date and time of day"
.xx "date(I): get date and time of" "day"
.xx "" "db(I): symbolic debugger"
.xx "" "dbppt(I): write binary paper tape"
.xx "" "dc(I): desk calculator"
.xx "db(I): symbolic" "debugger"
.xx "dpt(VI): read" "DEC ASCII paper tapes"
.xx "dli(VI): load" "DEC binary paper tapes"
.xx "basic(VI):" "DEC supplied BASIC"
.xx "tap0,...,tap7(IV):" "DECtape file"
.xx "dtf(I): format" "DECtape"
.xx "rew(I): rewind" "DECtape"
.xx "tap(I): manipulate" "DECtape"
.xx "rmdir(I): remove" "(delete) directory"
.xx "rm(I): remove" "(delete) file"
.xx "dsw(I):" "delete files interactively"
.xx "unlink(II): remove" "(delete) file"
.xx "mesg(I): permit or" "deny messages"
.xx "switch(III): transfer" "depending on value"
.xx "dc(I):" "desk calculator"
.xx "" "df(I): find free disk space"
.xx "bas(I): BASIC" "dialect"
.xx "directory(V):" "directory format"
.xx "chdir(I): change working" "directory"
.xx "chdir(II): change working" "directory"
.xx "ls(I): list contents of" "directory"
.xx "mkdir(I): create" "directory"
.xx "mkdir(II): create" "directory"
.xx "rmdir(I): remove (delete)" "directory"
.xx "" "directory(V): directory format"
.xx "das(VI):" "disassembler"
.xx "rf0(IV): RF" "disk file"
.xx "rk0(IV): RK" "disk file"
.xx "rkl(I): load" "disk from tape"
.xx "df(I): find free" "disk space"
.xx "rkd(I): dump" "disk to tape"
.xx "du(I): find" "disk usage"
.xx "rkf(I): format RK" "disk"
.xx "umount(II):" "dismount file system"
.xx "umount(I):" "dismount removable file system"
.xx "" "dli(VI): load DEC binary paper tapes"
.xx "" "dpt(VI): read DEC ASCII paper tapes"
.xx "" "dsw(I): delete files interactively"
.xx "" "dtf(I): format DECtape"
.xx "" "du(I): find disk usage"
.xx "rkd(I):" "dump disk to tape"
.xx "od(I): octal" "dump of file"
.xx "" "ed(I): text editor"
.xx "ld(I): link" "editor (loader)"
.xx "ed(I): text" "editor"
.xx "log(III): logarithm base" "e"
.xx "cemt(II): catch" "EMT traps"
.xx "wc(I): get" "(English) word count"
.xx "" "exec(II): execute program file"
.xx "exec(II):" "execute program file"
.xx "exit(II): terminate" "execution"
.xx "" "exit(II): terminate execution"
.xx "glob(VII): argument" "expander"
.xx "" "exp(III): exponential function"
.xx "exp(III):" "exponential function"
.xx "" "f1,f2,f3,f4(VII): Fortran compiler passes"
.xx "cmp(I): compare" "file contents"
.xx "type(I): print" "file page-by-page"
.xx "stat(I): get" "file status"
.xx "stat(II): get" "file status"
.xx "file system(V):" "file system format"
.xx "check(I): check consistency of" "file system"
.xx "mkfs(I): initialize" "file system"
.xx "mount(I): mount removable" "file system"
.xx "mount(II): mount" "file system"
.xx "umount(I): dismount removable" "file system"
.xx "umount(II): dismount" "file system"
.xx "" "file system(V): file system format"
.xx "find(I): find" "file with given name"
.xx "pr(I): print" "file with headings"
.xx "archive(V): archive" "file"
.xx "chmod(II): change mode of" "file"
.xx "chown(II): change owner of" "file"
.xx "close(II): close open" "file"
.xx "core(V): core image" "file"
.xx "cp(I): copy" "file"
.xx "creat(II): create" "file"
.xx "exec(II): execute program" "file"
.xx "fstat(II): status of open" "file"
.xx "link(II): link to" "file"
.xx "ln(I): link to" "file"
.xx "mem(IV): core memory as" "file"
.xx "mv(I): move or rename" "file"
.xx "od(I): octal dump of" "file"
.xx "open(II): open" "file"
.xx "passwd(V): password" "file"
.xx "read(II): read" "file"
.xx "rf0(IV): RF disk" "file"
.xx "rk0(IV): RK disk" "file"
.xx "rm(I): remove (delete)" "file"
.xx "dsw(I): delete" "files interactively"
.xx "ar(I): archive (combine)" "files"
.xx "cat(I): concatenate (or print)" "files"
.xx "chmod(I): change access mode of" "files"
.xx "chown(I): change owner of" "files"
.xx "smdate(II): set date modified of" "file"
.xx "sort(VI): sort a" "file"
.xx "sum(I): sum" "file"
.xx "tap0,...,tap7(IV): DECtape" "file"
.xx "unlink(II): remove (delete)" "file"
.xx "write(II): write" "file"
.xx "du(I):" "find disk usage"
.xx "find(I):" "find file with given name"
.xx "df(I):" "find free disk space"
.xx "tty(I):" "find name of terminal"
.xx "tell(II):" "find read or write pointer"
.xx "un(I):" "find undefined symbols"
.xx "" "find(I): find file with given name"
.xx "brt1,brt2(VII): B start and" "finish"
.xx "ftoa(III): convert" "floating to ASCII"
.xx "atof(III): convert ASCII to" "floating"
.xx "fptrap(III):" "floating-point simulator"
.xx "" "for(I): compile Fortran program"
.xx "" "fork(II): create new process"
.xx "form(I): generate" "form letter"
.xx "dtf(I):" "format DECtape"
.xx "rkf(I):" "format RK disk"
.xx "roff(I):" "format text for printing"
.xx "bppt(V): binary paper tape" "format"
.xx "directory(V): directory" "format"
.xx "file system(V): file system" "format"
.xx "" "form(I): generate form letter"
.xx "f1,f2,f3,f4(VII):" "Fortran compiler passes"
.xx "libf(VII): standard" "Fortran library"
.xx "for(I): compile" "Fortran program"
.xx "" "fptrap(III): floating-point simulator"
.xx "df(I): find" "free disk space"
.xx "rkl(I): load disk" "from tape"
.xx "" "fstat(II): status of open file"
.xx "" "ftoa(III): convert floating to ASCII"
.xx "exp(III): exponential" "function"
.xx "bj(VI): the" "game of blackjack"
.xx "chess(VI): the" "game of chess"
.xx "moo(VI): the" "game of MOO"
.xx "ttt(VI): the" "game of tic-tac-toe"
.xx "form(I):" "generate form letter"
.xx "get(III):" "get character"
.xx "date(I):" "get date and time of day"
.xx "wc(I):" "get (English) word count"
.xx "stat(I):" "get file status"
.xx "stat(II):" "get file status"
.xx "tm(I):" "get time information"
.xx "time(II):" "get time of year"
.xx "gtty(II):" "get typewriter mode"
.xx "getuid(II):" "get user ID"
.xx "" "get(III): get character"
.xx "" "getuid(II): get user ID"
.xx "find(I): find file with" "given name"
.xx "" "glob(VII): argument expander"
.xx "" "gtty(II): get typewriter mode"
.xx "hup(I):" "hang up typewriter"
.xx "pr(I): print file with" "headings"
.xx "" "hup(I): hang up typewriter"
.xx "getuid(II): get user" "ID"
.xx "setuid(II): set user" "ID"
.xx "uids(V): map names to user" "ID\'s"
.xx "" "ilgins(II): catch illegal instruction trap"
.xx "ilgins(II): catch" "illegal instruction trap"
.xx "core(V): core" "image file"
.xx "tm(I): get time" "information"
.xx "utmp(V): logged-in user" "information"
.xx "intr(II): catch or" "inhibit interrupts"
.xx "quit(II): catch or" "inhibit quits"
.xx "mkfs(I):" "initialize file system"
.xx "init(VII):" "initializer process"
.xx "" "init(VII): initializer process"
.xx "ilgins(II): catch illegal" "instruction trap"
.xx "itoa(III): convert" "integer to ASCII"
.xx "atoi(III): convert ASCII to" "integer"
.xx "dsw(I): delete files" "interactively"
.xx "bilib(VII): B" "interpreter library"
.xx "sh(I): command" "interpreter"
.xx "intr(II): catch or inhibit" "interrupts"
.xx "" "intr(II): catch or inhibit interrupts"
.xx "" "itoa(III): convert integer to ASCII"
.xx "" "kbd(VII): map of TTY 37 keyboard"
.xx "kbd(VII): map of TTY 37" "keyboard"
.xx "" "lbppt(I): read binary paper tape"
.xx "" "ld(I): link editor (loader)"
.xx "form(I): generate form" "letter"
.xx "" "liba(VII): standard assembly-language library"
.xx "" "libb(VII): standard B library"
.xx "" "libf(VII): standard Fortran library"
.xx "bilib(VII): B interpreter" "library"
.xx "liba(VII): standard assembly-language" "library"
.xx "libb(VII): standard B" "library"
.xx "libf(VII): standard Fortran" "library"
.xx "ld(I):" "link editor (loader)"
.xx "link(II):" "link to file"
.xx "ln(I):" "link to file"
.xx "" "link(II): link to file"
.xx "ls(I):" "list contents of directory"
.xx "" "ln(I): link to file"
.xx "dli(VI):" "load DEC binary paper tapes"
.xx "rkl(I):" "load disk from tape"
.xx "a.out(V): assembler and" "loader output"
.xx "ld(I): link editor" "(loader)"
.xx "log(III):" "logarithm base e"
.xx "utmp(V):" "logged-in user information"
.xx "" "log(III): logarithm base e"
.xx "" "ls(I): list contents of directory"
.xx "mail(I): send" "mail to another user"
.xx "" "mail(I): send mail to another user"
.xx "tap(I):" "manipulate DECtape"
.xx "uids(V):" "map names to user ID\'s"
.xx "ascii(VII):" "map of ASCII"
.xx "kbd(VII):" "map of TTY 37 keyboard"
.xx "" "mem(IV): core memory as file"
.xx "mem(IV): core" "memory as file"
.xx "" "mesg(I): permit or deny messages"
.xx "" "mesg(III): print string on typewriter"
.xx "mesg(I): permit or deny" "messages"
.xx "" "mkdir(I): create directory"
.xx "" "mkdir(II): create directory"
.xx "" "mkfs(I): initialize file system"
.xx "chmod(II): change" "mode of file"
.xx "chmod(I): change access" "mode of files"
.xx "stty(II): set" "mode of typewriter"
.xx "gtty(II): get typewriter" "mode"
.xx "smdate(II): set date" "modified of file"
.xx "moo(VI): the game of" "MOO"
.xx "" "moo(VI): the game of MOO"
.xx "mount(II):" "mount file system"
.xx "mount(I):" "mount removable file system"
.xx "" "mount(I): mount removable file system"
.xx "" "mount(II): mount file system"
.xx "mv(I):" "move or rename file"
.xx "seek(II):" "move read or write pointer"
.xx "" "mv(I): move or rename file"
.xx "tty(I): find" "name of terminal"
.xx "find(I): find file with given" "name"
.xx "nm(I): print" "namelist"
.xx "uids(V): map" "names to user ID\'s"
.xx "fork(II): create" "new process"
.xx "" "nm(I): print namelist"
.xx "od(I):" "octal dump of file"
.xx "" "od(I): octal dump of file"
.xx "close(II): close" "open file"
.xx "fstat(II): status of" "open file"
.xx "open(II):" "open file"
.xx "" "open(II): open file"
.xx "cat(I): concatenate" "(or print) files"
.xx "a.out(V): assembler and loader" "output"
.xx "chown(II): change" "owner of file"
.xx "chown(I): change" "owner of files"
.xx "type(I): print file" "page-by-page"
.xx "bppt(V): binary" "paper tape format"
.xx "dbppt(I): write binary" "paper tape"
.xx "lbppt(I): read binary" "paper tape"
.xx "ppt(IV): punched" "paper tape"
.xx "dli(VI): load DEC binary" "paper tapes"
.xx "dpt(VI): read DEC ASCII" "paper tapes"
.xx "as2(VII): assembler\'s" "pass 2"
.xx "f1,f2,f3,f4(VII): Fortran compiler" "passes"
.xx "" "passwd(V): password file"
.xx "passwd(V):" "password file"
.xx "mesg(I):" "permit or deny messages"
.xx "seek(II): move read or write" "pointer"
.xx "tell(II): find read or write" "pointer"
.xx "" "ppt(IV): punched paper tape"
.xx "" "pr(I): print file with headings"
.xx "cal(VI):" "print calender"
.xx "type(I):" "print file page-by-page"
.xx "pr(I):" "print file with headings"
.xx "cat(I): concatenate (or" "print) files"
.xx "nm(I):" "print namelist"
.xx "mesg(III):" "print string on typewriter"
.xx "ptime(III):" "print time"
.xx "roff(I): format text for" "printing"
.xx "bproc(VII): boot" "procedure"
.xx "fork(II): create new" "process"
.xx "init(VII): initializer" "process"
.xx "rele(II): release" "processor"
.xx "wait(II): wait for" "process"
.xx "break(II): set" "program break"
.xx "exec(II): execute" "program file"
.xx "b(I): compile B" "program"
.xx "for(I): compile Fortran" "program"
.xx "" "ptime(III): print time"
.xx "ppt(IV):" "punched paper tape"
.xx "" "putc(III): write character or word"
.xx "" "quit(II): catch or inhibit quits"
.xx "quit(II): catch or inhibit" "quits"
.xx "lbppt(I):" "read binary paper tape"
.xx "dpt(VI):" "read DEC ASCII paper tapes"
.xx "read(II):" "read file"
.xx "seek(II): move" "read or write pointer"
.xx "tell(II): find" "read or write pointer"
.xx "" "read(II): read file"
.xx "boot(I):" "reboot system"
.xx "rele(II):" "release processor"
.xx "" "rele(II): release processor"
.xx "strip(I): remove symbols," "relocation bits"
.xx "tty0,...,tty5(IV):" "remote typewriter"
.xx "mount(I): mount" "removable file system"
.xx "umount(I): dismount" "removable file system"
.xx "rmdir(I):" "remove (delete) directory"
.xx "rm(I):" "remove (delete) file"
.xx "unlink(II):" "remove (delete) file"
.xx "strip(I):" "remove symbols, relocation bits"
.xx "mv(I): move or" "rename file"
.xx "" "rew(I): rewind DECtape"
.xx "rew(I):" "rewind DECtape"
.xx "rf0(IV):" "RF disk file"
.xx "" "rf0(IV): RF disk file"
.xx "rk0(IV):" "RK disk file"
.xx "rkf(I): format" "RK disk"
.xx "" "rk0(IV): RK disk file"
.xx "" "rkd(I): dump disk to tape"
.xx "" "rkf(I): format RK disk"
.xx "" "rkl(I): load disk from tape"
.xx "" "rmdir(I): remove (delete) directory"
.xx "" "rm(I): remove (delete) file"
.xx "" "roff(I): format text for printing"
.xx "" "sdate(I): adjust date and time"
.xx "" "seek(II): move read or write pointer"
.xx "mail(I):" "send mail to another user"
.xx "smdate(II):" "set date modified of file"
.xx "stty(II):" "set mode of typewriter"
.xx "break(II):" "set program break"
.xx "stime(II):" "set system time"
.xx "setuid(II):" "set user ID"
.xx "" "setuid(II): set user ID"
.xx "" "sh(I): command interpreter"
.xx "fptrap(III): floating-point" "simulator"
.xx "sin(III):" "sine, cosine"
.xx "" "sin(III): sine, cosine"
.xx "" "smdate(II): set date modified of file"
.xx "sort(VI):" "sort a file"
.xx "" "sort(VI): sort a file"
.xx "df(I): find free disk" "space"
.xx "liba(VII):" "standard assembly-language library"
.xx "libb(VII):" "standard B library"
.xx "libf(VII):" "standard Fortran library"
.xx "brt1,brt2(VII): B" "start and finish"
.xx "" "stat(I): get file status"
.xx "" "stat(II): get file status"
.xx "fstat(II):" "status of open file"
.xx "stat(I): get file" "status"
.xx "stat(II): get file" "status"
.xx "" "stime(II): set system time"
.xx "mesg(III): print" "string on typewriter"
.xx "" "strip(I): remove symbols, relocation bits"
.xx "" "stty(II): set mode of typewriter"
.xx "" "su(I): become super-user"
.xx "sum(I):" "sum file"
.xx "" "sum(I): sum file"
.xx "su(I): become" "super-user"
.xx "basic(VI): DEC" "supplied BASIC"
.xx "" "switch(III): transfer depending on value"
.xx "db(I):" "symbolic debugger"
.xx "strip(I): remove" "symbols, relocation bits"
.xx "un(I): find undefined" "symbols"
.xx "file system(V): file" "system format"
.xx "stime(II): set" "system time"
.xx "boot(I): reboot" "system"
.xx "check(I): check consistency of file" "system"
.xx "mkfs(I): initialize file" "system"
.xx "mount(I): mount removable file" "system"
.xx "mount(II): mount file" "system"
.xx "umount(I): dismount removable file" "system"
.xx "umount(II): dismount file" "system"
.xx "file" "system(V): file system format"
.xx "who(I): who is on the" "system"
.xx "" "tap0,...,tap7(IV): DECtape file"
.xx "bppt(V): binary paper" "tape format"
.xx "dbppt(I): write binary paper" "tape"
.xx "lbppt(I): read binary paper" "tape"
.xx "ppt(IV): punched paper" "tape"
.xx "rkd(I): dump disk to" "tape"
.xx "rkl(I): load disk from" "tape"
.xx "dli(VI): load DEC binary paper" "tapes"
.xx "dpt(VI): read DEC ASCII paper" "tapes"
.xx "" "tap(I): manipulate DECtape"
.xx "" "tell(II): find read or write pointer"
.xx "tty(I): find name of" "terminal"
.xx "exit(II):" "terminate execution"
.xx "ed(I):" "text editor"
.xx "roff(I): format" "text for printing"
.xx "ttt(VI): the game of" "tic-tac-toe"
.xx "tm(I): get" "time information"
.xx "date(I): get date and" "time of day"
.xx "time(II): get" "time of year"
.xx "ctime(III): convert" "time to ASCII"
.xx "" "time(II): get time of year"
.xx "ptime(III): print" "time"
.xx "sdate(I): adjust date and" "time"
.xx "stime(II): set system" "time"
.xx "" "tm(I): get time information"
.xx "switch(III):" "transfer depending on value"
.xx "ilgins(II): catch illegal instruction" "trap"
.xx "cemt(II): catch EMT" "traps"
.xx "" "ttt(VI): the game of tic-tac-toe"
.xx "kbd(VII): map of" "TTY 37 keyboard"
.xx "" "tty0,...,tty5(IV): remote typewriter"
.xx "" "tty(I): find name of terminal"
.xx "" "tty(IV): console typewriter"
.xx "" "type(I): print file page-by-page"
.xx "gtty(II): get" "typewriter mode"
.xx "hup(I): hang up" "typewriter"
.xx "mesg(III): print string on" "typewriter"
.xx "stty(II): set mode of" "typewriter"
.xx "tty0,...,tty5(IV): remote" "typewriter"
.xx "tty(IV): console" "typewriter"
.xx "" "uids(V): map names to user ID\'s"
.xx "" "umount(I): dismount removable file system"
.xx "" "umount(II): dismount file system"
.xx "un(I): find" "undefined symbols"
.xx "" "un(I): find undefined symbols"
.xx "" "unlink(II): remove (delete) file"
.xx "du(I): find disk" "usage"
.xx "getuid(II): get" "user ID"
.xx "setuid(II): set" "user ID"
.xx "uids(V): map names to" "user ID\'s"
.xx "utmp(V): logged-in" "user information"
.xx "mail(I): send mail to another" "user"
.xx "write(I): write to another" "user"
.xx "" "utmp(V): logged-in user information"
.xx "switch(III): transfer depending on" "value"
.xx "wait(II):" "wait for process"
.xx "" "wait(II): wait for process"
.xx "" "wc(I): get (English) word count"
.xx "who(I):" "who is on the system"
.xx "" "who(I): who is on the system"
.xx "find(I): find file" "with given name"
.xx "pr(I): print file" "with headings"
.xx "wc(I): get (English)" "word count"
.xx "putc(III): write character or" "word"
.xx "chdir(I): change" "working directory"
.xx "chdir(II): change" "working directory"
.xx "dbppt(I):" "write binary paper tape"
.xx "putc(III):" "write character or word"
.xx "write(II):" "write file"
.xx "seek(II): move read or" "write pointer"
.xx "tell(II): find read or" "write pointer"
.xx "write(I):" "write to another user"
.xx "" "write(I): write to another user"
.xx "" "write(II): write file"
.xx "time(II): get time of" "year"
