.xx "dp0(IV):" "201 Dataphone"
.xx "dn0(IV):" "801 ACU"
.xx "chmod(I): change" "access mode of files"
.xx "wtmp(V):" "accounting files"
.xx "acct(I): get connect-time" "accounting"
.xx "tacct(I): connect-time" "accounting"
.xx "" "acct(I): get connect-time accounting"
.xx "dn0(IV): 801" "ACU"
.xx "getty(VII):" "adapt to typewriter"
.xx "salloc(III): storage" "allocator"
.xx "mail(I): send mail to" "another user"
.xx "write(I): write to" "another user"
.xx "" "a.out(V): assembler and loader output"
.xx "ar(I):" "archive (combine) files"
.xx "archive(V):" "archive file"
.xx "" "archive(V): archive file"
.xx "atan(III):" "arctangent"
.xx "glob(VII):" "argument expander"
.xx "echo(I): print command" "arguments"
.xx "" "ar(I): archive (combine) files"
.xx "sort(I): sort" "ASCII file"
.xx "dpt(VI): read DEC" "ASCII paper tapes"
.xx "atof(III): convert" "ASCII to floating"
.xx "atoi(III): convert" "ASCII to integer"
.xx "ascii(VII): map of" "ASCII"
.xx "ctime(III): convert time to" "ASCII"
.xx "ftoa(III): convert floating to" "ASCII"
.xx "itoa(III): convert integer to" "ASCII"
.xx "" "ascii(VII): map of ASCII"
.xx "" "as(I): assembler"
.xx "a.out(V):" "assembler and loader output"
.xx "as(I):" "assembler"
.xx "sync(II):" "assure synchronization"
.xx "" "atan(III): arctangent"
.xx "" "atof(III): convert ASCII to floating"
.xx "" "atoi(III): convert ASCII to integer"
.xx "bc(VI): compile" "B program"
.xx "log(III): logarithm" "base e"
.xx "" "bas(I): BASIC dialect"
.xx "bas(I):" "BASIC dialect"
.xx "basic(VI): DEC supplied" "BASIC"
.xx "" "basic(VI): DEC supplied BASIC"
.xx "" "bc(VI): compile B program"
.xx "su(I):" "become super-user"
.xx "dli(VI): load DEC" "binary paper tapes"
.xx "strip(I): remove symbols, relocation" "bits"
.xx "" "bj(VI): the game of blackjack"
.xx "bj(VI): the game of" "blackjack"
.xx "bproc(VII):" "boot procedure"
.xx "" "bproc(VII): boot procedure"
.xx "break(II): set program" "break"
.xx "" "break(II): set program break"
.xx "istat(I): file status" "by i-number"
.xx "cc(I): compile" "C program"
.xx "dc(I): desk" "calculator"
.xx "cal(VI): print" "calender"
.xx "" "cal(VI): print calender"
.xx "ident(V): GCOS ident" "cards"
.xx "cemt(II):" "catch EMT traps"
.xx "ilgins(II):" "catch illegal instruction trap"
.xx "intr(II):" "catch or inhibit interrupts"
.xx "quit(II):" "catch or inhibit quits"
.xx "" "cat(I): concatenate (or print) files"
.xx "" "cc(I): compile C program"
.xx "" "cemt(II): catch EMT traps"
.xx "chmod(I):" "change access mode of files"
.xx "chmod(II):" "change mode of file"
.xx "chown(II):" "change owner of file"
.xx "chown(I):" "change owner of files"
.xx "chdir(I):" "change working directory"
.xx "chdir(II):" "change working directory"
.xx "putc(III): write" "character or word"
.xx "getc(III): get" "character"
.xx "" "chash(VI): prepare symbol table"
.xx "" "chdir(I): change working directory"
.xx "" "chdir(II): change working directory"
.xx "check(I):" "check consistency of file system"
.xx "" "check(I): check consistency of file system"
.xx "" "chmod(I): change access mode of files"
.xx "" "chmod(II): change mode of file"
.xx "" "chown(I): change owner of files"
.xx "" "chown(II): change owner of file"
.xx "close(II):" "close open file"
.xx "" "close(II): close open file"
.xx "" "cmp(I): compare file contents"
.xx "ar(I): archive" "(combine) files"
.xx "echo(I): print" "command arguments"
.xx "sh(I):" "command interpreter"
.xx "exit(I): end" "command sequence"
.xx "goto(I):" "command transfer"
.xx "if(I): conditional" "command"
.xx "gerts(III):" "communicate with GCOS"
.xx "tss(I):" "communicate with MH-TSS (GCOS)"
.xx "cmp(I):" "compare file contents"
.xx "bc(VI):" "compile B program"
.xx "cc(I):" "compile C program"
.xx "fc(I):" "compile Fortran program"
.xx "tmg(VI):" "compile tmgl program"
.xx "hypot(III):" "compute hypotenuse"
.xx "cat(I):" "concatenate (or print) files"
.xx "if(I):" "conditional command"
.xx "acct(I): get" "connect-time accounting"
.xx "tacct(I):" "connect-time accounting"
.xx "check(I): check" "consistency of file system"
.xx "tty(IV):" "console typewriter"
.xx "const(III): floating-point" "constants"
.xx "" "const(III): floating-point constants"
.xx "ls(I): list" "contents of directory"
.xx "cmp(I): compare file" "contents"
.xx "atof(III):" "convert ASCII to floating"
.xx "atoi(III):" "convert ASCII to integer"
.xx "ftoa(III):" "convert floating to ASCII"
.xx "itoa(III):" "convert integer to ASCII"
.xx "ctime(III):" "convert time to ASCII"
.xx "cp(I):" "copy file"
.xx "core(V):" "core image file"
.xx "mem(IV):" "core memory"
.xx "" "core(V): core image file"
.xx "sin(III): sine," "cosine"
.xx "wc(I): get (English) word" "count"
.xx "" "cp(I): copy file"
.xx "makdir(II):" "create directory"
.xx "mkdir(I):" "create directory"
.xx "creat(II):" "create file"
.xx "fork(II):" "create new process"
.xx "" "creat(II): create file"
.xx "" "cref(VI): cross reference table"
.xx "cref(VI):" "cross reference table"
.xx "" "ctime(III): convert time to ASCII"
.xx "dpd(I): spawn data-phone" "daemon"
.xx "salv(I): repair" "damaged file system"
.xx "" "das(VI): disassembler"
.xx "dpd(I): spawn" "data-phone daemon"
.xx "dp0(IV): 201" "Dataphone"
.xx "date(I): get" "date and time of day"
.xx "mdate(II): set" "date modified of file"
.xx "" "date(I): get date and time of day"
.xx "date(I): get date and time of" "day"
.xx "" "db(I): symbolic debugger"
.xx "" "dc(I): desk calculator"
.xx "db(I): symbolic" "debugger"
.xx "dpt(VI): read" "DEC ASCII paper tapes"
.xx "dli(VI): load" "DEC binary paper tapes"
.xx "basic(VI):" "DEC supplied BASIC"
.xx "tap(V):" "DECtape format"
.xx "rew(I): rewind" "DECtape"
.xx "tap0(IV):" "DECtape"
.xx "tap(I): manipulate" "DECtape"
.xx "sleep(II):" "delay execution"
.xx "rmdir(I): remove" "(delete) directory"
.xx "rm(I): remove" "(delete) file"
.xx "dsw(I):" "delete files interactively"
.xx "unlink(II): remove" "(delete) file"
.xx "mesg(I): permit or" "deny messages"
.xx "switch(III): transfer" "depending on value"
.xx "dc(I):" "desk calculator"
.xx "kill(II):" "destroy process"
.xx "" "df(I): find free disk space"
.xx "bas(I): BASIC" "dialect"
.xx "directory(V):" "directory format"
.xx "ds(I): verify" "directory hierarchy"
.xx "chdir(I): change working" "directory"
.xx "chdir(II): change working" "directory"
.xx "ls(I): list contents of" "directory"
.xx "makdir(II): create" "directory"
.xx "mkdir(I): create" "directory"
.xx "rmdir(I): remove (delete)" "directory"
.xx "" "directory(V): directory format"
.xx "das(VI):" "disassembler"
.xx "df(I): find free" "disk space"
.xx "du(I): find" "disk usage"
.xx "rf0(IV): RF" "disk"
.xx "rk0(IV): RK" "disk"
.xx "rp0(IV): RP" "disk"
.xx "umount(II):" "dismount file system"
.xx "umount(I):" "dismount removable file system"
.xx "" "dli(VI): load DEC binary paper tapes"
.xx "" "dn0(IV): 801 ACU"
.xx "" "dp0(IV): 201 Dataphone"
.xx "" "dpd(I): spawn data-phone daemon"
.xx "" "dpt(VI): read DEC ASCII paper tapes"
.xx "" "ds(I): verify directory hierarchy"
.xx "" "dsw(I): delete files interactively"
.xx "" "du(I): find disk usage"
.xx "od(I): octal" "dump of file"
.xx "" "echo(I): print command arguments"
.xx "" "ed(I): text editor"
.xx "ld(I): link" "editor (loader)"
.xx "ed(I): text" "editor"
.xx "fed(I): form-letter" "editor"
.xx "log(III): logarithm base" "e"
.xx "cemt(II): catch" "EMT traps"
.xx "exit(I):" "end command sequence"
.xx "wc(I): get" "(English) word count"
.xx "" "exec(II): execute program file"
.xx "exec(II):" "execute program file"
.xx "exit(II): terminate" "execution"
.xx "sleep(II): delay" "execution"
.xx "" "exit(I): end command sequence"
.xx "" "exit(II): terminate execution"
.xx "glob(VII): argument" "expander"
.xx "" "exp(III): exponential function"
.xx "exp(III):" "exponential function"
.xx "" "fc(I): compile Fortran program"
.xx "" "fed(I): form-letter editor"
.xx "cmp(I): compare" "file contents"
.xx "opr(I): print" "file off-line"
.xx "type(I): print" "file page-by-page"
.xx "ov(I): page overlay" "file print"
.xx "istat(I):" "file status by i-number"
.xx "stat(I): get" "file status"
.xx "stat(II): get" "file status"
.xx "file system(V):" "file system format"
.xx "check(I): check consistency of" "file system"
.xx "mount(I): mount removable" "file system"
.xx "mount(II): mount" "file system"
.xx "salv(I): repair damaged" "file system"
.xx "umount(I): dismount removable" "file system"
.xx "umount(II): dismount" "file system"
.xx "" "file system(V): file system format"
.xx "pr(I): print" "file with headings"
.xx "archive(V): archive" "file"
.xx "chmod(II): change mode of" "file"
.xx "chown(II): change owner of" "file"
.xx "close(II): close open" "file"
.xx "core(V): core image" "file"
.xx "cp(I): copy" "file"
.xx "creat(II): create" "file"
.xx "exec(II): execute program" "file"
.xx "fstat(II): status of open" "file"
.xx "link(II): link to" "file"
.xx "ln(I): link to" "file"
.xx "mdate(II): set date modified of" "file"
.xx "mv(I): move or rename" "file"
.xx "od(I): octal dump of" "file"
.xx "open(II): open" "file"
.xx "passwd(V): password" "file"
.xx "read(II): read" "file"
.xx "rm(I): remove (delete)" "file"
.xx "dsw(I): delete" "files interactively"
.xx "mt(I): save/restore" "files on magtape"
.xx "ar(I): archive (combine)" "files"
.xx "cat(I): concatenate (or print)" "files"
.xx "chmod(I): change access mode of" "files"
.xx "chown(I): change owner of" "files"
.xx "sort(I): sort ASCII" "file"
.xx "sum(I): sum" "file"
.xx "wtmp(V): accounting" "files"
.xx "unlink(II): remove (delete)" "file"
.xx "write(II): write" "file"
.xx "du(I):" "find disk usage"
.xx "df(I):" "find free disk space"
.xx "tty(I):" "find name of terminal"
.xx "tell(II):" "find read or write pointer"
.xx "un(I):" "find undefined symbols"
.xx "ftoa(III): convert" "floating to ASCII"
.xx "atof(III): convert ASCII to" "floating"
.xx "const(III):" "floating-point constants"
.xx "fptrap(III):" "floating-point simulator"
.xx "" "fork(II): create new process"
.xx "form(I): generate" "form letter"
.xx "nroff(I):" "format text for printing"
.xx "roff(I):" "format text for printing"
.xx "directory(V): directory" "format"
.xx "file system(V): file system" "format"
.xx "tap(V): DECtape" "format"
.xx "" "form(I): generate form letter"
.xx "fed(I):" "form-letter editor"
.xx "fc(I): compile" "Fortran program"
.xx "" "fptrap(III): floating-point simulator"
.xx "df(I): find" "free disk space"
.xx "" "fstat(II): status of open file"
.xx "" "ftoa(III): convert floating to ASCII"
.xx "exp(III): exponential" "function"
.xx "bj(VI): the" "game of blackjack"
.xx "moo(VI): the" "game of MOO"
.xx "ttt(VI): the" "game of tic-tac-toe"
.xx "ident(V):" "GCOS ident cards"
.xx "gerts(III): communicate with" "GCOS"
.xx "tss(I): communicate with MH-TSS" "(GCOS)"
.xx "form(I):" "generate form letter"
.xx "" "gerts(III): communicate with GCOS"
.xx "getc(III):" "get character"
.xx "acct(I):" "get connect-time accounting"
.xx "date(I):" "get date and time of day"
.xx "wc(I):" "get (English) word count"
.xx "stat(I):" "get file status"
.xx "stat(II):" "get file status"
.xx "tm(I):" "get time information"
.xx "time(II):" "get time of year"
.xx "gtty(II):" "get typewriter mode"
.xx "getuid(II):" "get user ID"
.xx "" "getc(III): get character"
.xx "" "getty(VII): adapt to typewriter"
.xx "" "getuid(II): get user ID"
.xx "" "glob(VII): argument expander"
.xx "" "goto(I): command transfer"
.xx "" "gtty(II): get typewriter mode"
.xx "pr(I): print file with" "headings"
.xx "ds(I): verify directory" "hierarchy"
.xx "" "hog(II): set low-priority status"
.xx "hypot(III): compute" "hypotenuse"
.xx "" "hypot(III): compute hypotenuse"
.xx "" ":(I): place label"
.xx "ident(V): GCOS" "ident cards"
.xx "" "ident(V): GCOS ident cards"
.xx "getuid(II): get user" "ID"
.xx "setuid(II): set user" "ID"
.xx "uids(V): map names to user" "ID's"
.xx "" "if(I): conditional command"
.xx "" "ilgins(II): catch illegal instruction trap"
.xx "ilgins(II): catch" "illegal instruction trap"
.xx "core(V): core" "image file"
.xx "ptx(VI): permuted" "index"
.xx "tm(I): get time" "information"
.xx "utmp(V): logged-in user" "information"
.xx "intr(II): catch or" "inhibit interrupts"
.xx "quit(II): catch or" "inhibit quits"
.xx "init(VII):" "initializer process"
.xx "" "init(VII): initializer process"
.xx "ilgins(II): catch illegal" "instruction trap"
.xx "itoa(III): convert" "integer to ASCII"
.xx "atoi(III): convert ASCII to" "integer"
.xx "dsw(I): delete files" "interactively"
.xx "sh(I): command" "interpreter"
.xx "intr(II): catch or inhibit" "interrupts"
.xx "" "intr(II): catch or inhibit interrupts"
.xx "istat(I): file status by" "i-number"
.xx "" "istat(I): file status by i-number"
.xx "" "itoa(III): convert integer to ASCII"
.xx "" "kill(II): destroy process"
.xx ":(I): place" "label"
.xx "" "ld(I): link editor (loader)"
.xx "form(I): generate form" "letter"
.xx "lpr(IV):" "line printer"
.xx "ld(I):" "link editor (loader)"
.xx "link(II):" "link to file"
.xx "ln(I):" "link to file"
.xx "" "link(II): link to file"
.xx "ls(I):" "list contents of directory"
.xx "nlist(III): read name" "list"
.xx "" "ln(I): link to file"
.xx "dli(VI):" "load DEC binary paper tapes"
.xx "a.out(V): assembler and" "loader output"
.xx "ld(I): link editor" "(loader)"
.xx "login(I):" "log on to system"
.xx "log(III):" "logarithm base e"
.xx "utmp(V):" "logged-in user information"
.xx "" "log(III): logarithm base e"
.xx "" "login(I): log on to system"
.xx "hog(II): set" "low-priority status"
.xx "" "lpr(IV): line printer"
.xx "" "ls(I): list contents of directory"
.xx "" "m6(I): macroprocessor"
.xx "m6(I):" "macroprocessor"
.xx "mt0" "magtape"
.xx "mt(I): save/restore files on" "magtape"
.xx "mail(I): send" "mail to another user"
.xx "" "mail(I): send mail to another user"
.xx "" "makdir(II): create directory"
.xx "" "man(I): run off manual section"
.xx "tap(I):" "manipulate DECtape"
.xx "man(I): run off" "manual section"
.xx "uids(V):" "map names to user ID's"
.xx "ascii(VII):" "map of ASCII"
.xx "" "mdate(II): set date modified of file"
.xx "" "mem(IV): core memory"
.xx "mem(IV): core" "memory"
.xx "" "mesg(I): permit or deny messages"
.xx "" "mesg(III): print string on typewriter"
.xx "mesg(I): permit or deny" "messages"
.xx "tss(I): communicate with" "MH-TSS (GCOS)"
.xx "" "mkdir(I): create directory"
.xx "chmod(II): change" "mode of file"
.xx "chmod(I): change access" "mode of files"
.xx "stty(II): set" "mode of typewriter"
.xx "gtty(II): get typewriter" "mode"
.xx "stty(I): set typewriter" "modes"
.xx "mdate(II): set date" "modified of file"
.xx "moo(VI): the game of" "MOO"
.xx "" "moo(VI): the game of MOO"
.xx "mount(II):" "mount file system"
.xx "mount(I):" "mount removable file system"
.xx "" "mount(I): mount removable file system"
.xx "" "mount(II): mount file system"
.xx "mv(I):" "move or rename file"
.xx "seek(II):" "move read or write pointer"
.xx "" "mt0 magtape"
.xx "" "mt(I): save/restore files on magtape"
.xx "" "mv(I): move or rename file"
.xx "nlist(III): read" "name list"
.xx "tty(I): find" "name of terminal"
.xx "nm(I): print" "namelist"
.xx "uids(V): map" "names to user ID's"
.xx "fork(II): create" "new process"
.xx "" "nlist(III): read name list"
.xx "" "nm(I): print namelist"
.xx "" "nroff(I): format text for printing"
.xx "od(I):" "octal dump of file"
.xx "" "od(I): octal dump of file"
.xx "man(I): run" "off manual section"
.xx "opr(I): print file" "off-line"
.xx "close(II): close" "open file"
.xx "fstat(II): status of" "open file"
.xx "open(II):" "open file"
.xx "" "open(II): open file"
.xx "" "opr(I): print file off-line"
.xx "cat(I): concatenate" "(or print) files"
.xx "a.out(V): assembler and loader" "output"
.xx "ov(I): page" "overlay file print"
.xx "" "ov(I): page overlay file print"
.xx "chown(II): change" "owner of file"
.xx "chown(I): change" "owner of files"
.xx "ov(I):" "page overlay file print"
.xx "type(I): print file" "page-by-page"
.xx "ppt(IV): punched" "paper tape"
.xx "dli(VI): load DEC binary" "paper tapes"
.xx "dpt(VI): read DEC ASCII" "paper tapes"
.xx "" "passwd(V): password file"
.xx "passwd(V):" "password file"
.xx "mesg(I):" "permit or deny messages"
.xx "ptx(VI):" "permuted index"
.xx ":(I):" "place label"
.xx "seek(II): move read or write" "pointer"
.xx "tell(II): find read or write" "pointer"
.xx "" "ppt(IV): punched paper tape"
.xx "chash(VI):" "prepare symbol table"
.xx "" "pr(I): print file with headings"
.xx "cal(VI):" "print calender"
.xx "echo(I):" "print command arguments"
.xx "opr(I):" "print file off-line"
.xx "type(I):" "print file page-by-page"
.xx "pr(I):" "print file with headings"
.xx "cat(I): concatenate (or" "print) files"
.xx "nm(I):" "print namelist"
.xx "mesg(III):" "print string on typewriter"
.xx "ptime(III):" "print time"
.xx "lpr(IV): line" "printer"
.xx "nroff(I): format text for" "printing"
.xx "roff(I): format text for" "printing"
.xx "ov(I): page overlay file" "print"
.xx "bproc(VII): boot" "procedure"
.xx "fork(II): create new" "process"
.xx "init(VII): initializer" "process"
.xx "kill(II): destroy" "process"
.xx "rele(II): release" "processor"
.xx "wait(II): wait for" "process"
.xx "break(II): set" "program break"
.xx "exec(II): execute" "program file"
.xx "bc(VI): compile B" "program"
.xx "cc(I): compile C" "program"
.xx "fc(I): compile Fortran" "program"
.xx "tmg(VI): compile tmgl" "program"
.xx "" "ptime(III): print time"
.xx "" "ptx(VI): permuted index"
.xx "ppt(IV):" "punched paper tape"
.xx "" "putc(III): write character or word"
.xx "" "qsort(III): quicker sort"
.xx "qsort(III):" "quicker sort"
.xx "" "quit(II): catch or inhibit quits"
.xx "quit(II): catch or inhibit" "quits"
.xx "dpt(VI):" "read DEC ASCII paper tapes"
.xx "read(II):" "read file"
.xx "nlist(III):" "read name list"
.xx "seek(II): move" "read or write pointer"
.xx "tell(II): find" "read or write pointer"
.xx "" "read(II): read file"
.xx "cref(VI): cross" "reference table"
.xx "rele(II):" "release processor"
.xx "" "rele(II): release processor"
.xx "strip(I): remove symbols," "relocation bits"
.xx "tty0(IV):" "remote typewriter"
.xx "mount(I): mount" "removable file system"
.xx "umount(I): dismount" "removable file system"
.xx "rmdir(I):" "remove (delete) directory"
.xx "rm(I):" "remove (delete) file"
.xx "unlink(II):" "remove (delete) file"
.xx "strip(I):" "remove symbols, relocation bits"
.xx "mv(I): move or" "rename file"
.xx "salv(I):" "repair damaged file system"
.xx "" "rew(I): rewind DECtape"
.xx "rew(I):" "rewind DECtape"
.xx "rf0(IV):" "RF disk"
.xx "" "rf0(IV): RF disk"
.xx "rk0(IV):" "RK disk"
.xx "" "rk0(IV): RK disk"
.xx "" "rmdir(I): remove (delete) directory"
.xx "" "rm(I): remove (delete) file"
.xx "" "roff(I): format text for printing"
.xx "sqrt(III): square" "root"
.xx "rp0(IV):" "RP disk"
.xx "" "rp0(IV): RP disk"
.xx "man(I):" "run off manual section"
.xx "" "salloc(III): storage allocator"
.xx "" "salv(I): repair damaged file system"
.xx "mt(I):" "save/restore files on magtape"
.xx "man(I): run off manual" "section"
.xx "" "seek(II): move read or write pointer"
.xx "mail(I):" "send mail to another user"
.xx "exit(I): end command" "sequence"
.xx "mdate(II):" "set date modified of file"
.xx "hog(II):" "set low-priority status"
.xx "stty(II):" "set mode of typewriter"
.xx "break(II):" "set program break"
.xx "stime(II):" "set system time"
.xx "stty(I):" "set typewriter modes"
.xx "setuid(II):" "set user ID"
.xx "" "setuid(II): set user ID"
.xx "" "sh(I): command interpreter"
.xx "fptrap(III): floating-point" "simulator"
.xx "sin(III):" "sine, cosine"
.xx "" "sin(III): sine, cosine"
.xx "" "sleep(II): delay execution"
.xx "sort(I):" "sort ASCII file"
.xx "" "sort(I): sort ASCII file"
.xx "qsort(III): quicker" "sort"
.xx "df(I): find free disk" "space"
.xx "dpd(I):" "spawn data-phone daemon"
.xx "" "sqrt(III): square root"
.xx "sqrt(III):" "square root"
.xx "" "stat(I): get file status"
.xx "" "stat(II): get file status"
.xx "istat(I): file" "status by i-number"
.xx "fstat(II):" "status of open file"
.xx "hog(II): set low-priority" "status"
.xx "stat(I): get file" "status"
.xx "stat(II): get file" "status"
.xx "" "stime(II): set system time"
.xx "salloc(III):" "storage allocator"
.xx "mesg(III): print" "string on typewriter"
.xx "" "strip(I): remove symbols, relocation bits"
.xx "" "stty(I): set typewriter modes"
.xx "" "stty(II): set mode of typewriter"
.xx "" "su(I): become super-user"
.xx "sum(I):" "sum file"
.xx "" "sum(I): sum file"
.xx "su(I): become" "super-user"
.xx "basic(VI): DEC" "supplied BASIC"
.xx "" "switch(III): transfer depending on value"
.xx "chash(VI): prepare" "symbol table"
.xx "db(I):" "symbolic debugger"
.xx "strip(I): remove" "symbols, relocation bits"
.xx "un(I): find undefined" "symbols"
.xx "sync(II): assure" "synchronization"
.xx "" "sync(II): assure synchronization"
.xx "file system(V): file" "system format"
.xx "stime(II): set" "system time"
.xx "check(I): check consistency of file" "system"
.xx "login(I): log on to" "system"
.xx "mount(I): mount removable file" "system"
.xx "mount(II): mount file" "system"
.xx "salv(I): repair damaged file" "system"
.xx "umount(I): dismount removable file" "system"
.xx "umount(II): dismount file" "system"
.xx "file" "system(V): file system format"
.xx "who(I): who is on the" "system"
.xx "chash(VI): prepare symbol" "table"
.xx "cref(VI): cross reference" "table"
.xx "" "tacct(I): connect-time accounting"
.xx "" "tap0(IV): DECtape"
.xx "ppt(IV): punched paper" "tape"
.xx "dli(VI): load DEC binary paper" "tapes"
.xx "dpt(VI): read DEC ASCII paper" "tapes"
.xx "" "tap(I): manipulate DECtape"
.xx "" "tap(V): DECtape format"
.xx "" "tell(II): find read or write pointer"
.xx "tty(I): find name of" "terminal"
.xx "exit(II):" "terminate execution"
.xx "ed(I):" "text editor"
.xx "nroff(I): format" "text for printing"
.xx "roff(I): format" "text for printing"
.xx "ttt(VI): the game of" "tic-tac-toe"
.xx "tm(I): get" "time information"
.xx "date(I): get date and" "time of day"
.xx "time(II): get" "time of year"
.xx "ctime(III): convert" "time to ASCII"
.xx "" "time(II): get time of year"
.xx "ptime(III): print" "time"
.xx "stime(II): set system" "time"
.xx "tmg(VI): compile" "tmgl program"
.xx "" "tmg(VI): compile tmgl program"
.xx "" "tm(I): get time information"
.xx "switch(III):" "transfer depending on value"
.xx "goto(I): command" "transfer"
.xx "ilgins(II): catch illegal instruction" "trap"
.xx "cemt(II): catch EMT" "traps"
.xx "" "tss(I): communicate with MH-TSS (GCOS)"
.xx "" "ttt(VI): the game of tic-tac-toe"
.xx "" "tty0(IV): remote typewriter"
.xx "" "tty(I): find name of terminal"
.xx "" "tty(IV): console typewriter"
.xx "" "type(I): print file page-by-page"
.xx "gtty(II): get" "typewriter mode"
.xx "stty(I): set" "typewriter modes"
.xx "getty(VII): adapt to" "typewriter"
.xx "mesg(III): print string on" "typewriter"
.xx "stty(II): set mode of" "typewriter"
.xx "tty0(IV): remote" "typewriter"
.xx "tty(IV): console" "typewriter"
.xx "" "uids(V): map names to user ID's"
.xx "" "umount(I): dismount removable file system"
.xx "" "umount(II): dismount file system"
.xx "un(I): find" "undefined symbols"
.xx "" "un(I): find undefined symbols"
.xx "" "unlink(II): remove (delete) file"
.xx "du(I): find disk" "usage"
.xx "getuid(II): get" "user ID"
.xx "setuid(II): set" "user ID"
.xx "uids(V): map names to" "user ID's"
.xx "utmp(V): logged-in" "user information"
.xx "mail(I): send mail to another" "user"
.xx "write(I): write to another" "user"
.xx "" "utmp(V): logged-in user information"
.xx "switch(III): transfer depending on" "value"
.xx "ds(I):" "verify directory hierarchy"
.xx "wait(II):" "wait for process"
.xx "" "wait(II): wait for process"
.xx "" "wc(I): get (English) word count"
.xx "who(I):" "who is on the system"
.xx "" "who(I): who is on the system"
.xx "gerts(III): communicate" "with GCOS"
.xx "pr(I): print file" "with headings"
.xx "tss(I): communicate" "with MH-TSS (GCOS)"
.xx "wc(I): get (English)" "word count"
.xx "putc(III): write character or" "word"
.xx "chdir(I): change" "working directory"
.xx "chdir(II): change" "working directory"
.xx "putc(III):" "write character or word"
.xx "write(II):" "write file"
.xx "seek(II): move read or" "write pointer"
.xx "tell(II): find read or" "write pointer"
.xx "write(I):" "write to another user"
.xx "" "write(I): write to another user"
.xx "" "write(II): write file"
.xx "" "wtmp(V): accounting files"
.xx "time(II): get time of" "year"
