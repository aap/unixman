.pa 1
.he 'WAIT (II)'9/4/72'WAIT (II)'
.ti 0
NAME		wait  --  wait for process to die
.sp
.ti 0
SYNOPSIS	sys wait  / wait = 7.
.br
(process ID in r0)
.br
(termination status/user status in r1)
.sp
.ti 0
DESCRIPTION	wait____
causes its caller to delay until one of its child
processes terminates.
If any child has died since the last wait____, return is immediate;
if there are no children, return is immediate with
the error bit set.
In the case of several children several wait____s are needed
to learn of all the deaths.
.sp
If the error bit is not set on return,
the r1 high byte contains the low byte of the
child process r0 when it terminated.
The r1 low byte contains the termination status
of the process from the following list:
.sp
   0	exit
   1	bus error
   2	illegal instruction
   3	trace trap
   4	IOT trap
   5	power fail trap
   6	EMT trap
   7	bad system call
   8	PIR interrupt
   9	floating point exception
  10	memory violation
  11	quit
  12	interrupt
  13 	kill (see kill(II))
  14	User I/O (not currently possible)
 +16	core image produced
.sp
.ti 0
SEE ALSO	exit(II), fork(II)
.sp
.ti 0
DIAGNOSTICS	error bit
(c-bit) on if no children not previously waited for.
.sp
.ti 0
BUGS		A child
which dies, but is never
waited for consumes
a slot in the process table.
When this table is full,
the system is effectively hung.
